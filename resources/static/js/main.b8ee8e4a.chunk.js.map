{"version":3,"sources":["integration/Integration.js","components/Chart.js","App.js","custom-element/line-chart.js"],"names":["endpoint","process","getData","a","axios","get","Chart","payload","Object","keys","length","chartData","labels","CHART_COLORS","red","orange","yellow","green","blue","purple","grey","entries","data","map","key","value","push","datasets","label","name","borderWidth","borderColor","backgroundColor","mapDataToChartJs","type","options","plugins","legend","display","position","loaded","App","useState","setPayload","useEffect","LineChart","this","mountPoint","document","createElement","render","ReactDOM","StrictMode","appendChild","HTMLElement","customElements","define"],"mappings":"gPAEMA,EAAQ,UAAMC,uBAAN,gBAEDC,EAAO,uCAAG,sBAAAC,EAAA,sEACfC,IAAMC,IAAIL,GADK,mFAAH,qD,eCFPM,EAAQ,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,IAAIA,IAAYC,OAAOC,KAAKF,GAASG,OACjC,OAAO,KAEX,IAAMC,EAoBV,SAA0BJ,GACtB,IAAMK,EAAS,GACTD,EAAY,GACZE,EAAe,CACnBC,IAAK,oBACLC,OAAQ,oBACRC,OAAQ,oBACRC,MAAO,oBACPC,KAAM,oBACNC,OAAQ,qBACRC,KAAM,sBAQR,OALAZ,OAAOa,QAAQd,EAAQe,MAAMC,KAAI,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KAC/Cb,EAAOc,KAAKF,GACZb,EAAUe,KAAKD,MAGZ,CACHb,OAAQA,EACRe,SAAU,CACN,CACIC,MAAOrB,EAAQsB,KACfP,KAAMX,EACNmB,YAAa,EACbC,YAAa,eACbC,gBAAiB,CAACnB,EAAaC,IAAKD,EAAaE,OAAQF,EAAaG,OAAQH,EAAaI,MAAOJ,EAAaK,KAAML,EAAaM,OAAQN,EAAaO,SA9CjJa,CAAiB1B,GAEnC,OACI,8BACI,cAAC,IAAD,CACI2B,KAAK,OACLZ,KAAMX,EACNwB,QAAS,CACLC,QAAS,CACLC,OAAQ,CACJC,SAAS,EACTC,SAAU,iBCbtC,IAAIC,GAAS,EAqBEC,MAnBf,WACI,MAA8BC,mBAAS,IAAvC,mBAAOnC,EAAP,KAAgBoC,EAAhB,KASA,OAPAC,oBAAS,sBAAC,sBAAAzC,EAAA,yDACFqC,EADE,4BAEFG,EAFE,SAEgBzC,IAFhB,mBAE2BoB,MAF3B,cAGFkB,GAAS,EAHP,4CAQN,mCACI,8BACI,cAAC,EAAD,CAAOjC,QAASA,SCf1BsC,E,uKACF,WACIC,KAAKC,WAAaC,SAASC,cAAc,QACzCH,KAAKI,W,oBAGT,WACIC,IAASD,OAAO,cAAC,IAAME,WAAP,UACJ,cAAC,EAAD,MAERN,KAAKO,YAAYP,KAAKC,iB,eAVVO,cAcxBC,eAAelD,IAAI,eAAiBkD,eAAeC,OAAO,aAAcX,K","file":"static/js/main.b8ee8e4a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst endpoint = `${process.env.REACT_APP_PUBLIC_API_URL}/stats/sales`\n\nexport const getData = async ()=>\n  await axios.get(endpoint)\n\n\n\n","import {Line} from \"react-chartjs-2\";\n\nexport const Chart = ({payload}) => {\n    if(!payload || !Object.keys(payload).length) {\n        return null;\n    }\n    const chartData = mapDataToChartJs(payload);\n\n    return (\n        <div>\n            <Line\n                type='line'\n                data={chartData}\n                options={{\n                    plugins: {\n                        legend: {\n                            display: true,\n                            position: \"bottom\"\n                        }\n                    }\n                }}\n            />\n        </div>\n    );\n};\n\nfunction mapDataToChartJs(payload) {\n    const labels = [];\n    const chartData = [];\n    const CHART_COLORS = {\n      red: 'rgb(255, 99, 132)',\n      orange: 'rgb(255, 159, 64)',\n      yellow: 'rgb(255, 205, 86)',\n      green: 'rgb(75, 192, 192)',\n      blue: 'rgb(54, 162, 235)',\n      purple: 'rgb(153, 102, 255)',\n      grey: 'rgb(201, 203, 207)'\n    };\n\n    Object.entries(payload.data).map(([key, value]) => {\n        labels.push(key);\n        chartData.push(value);\n    })\n\n    return {\n        labels: labels,\n        datasets: [\n            {\n                label: payload.name,\n                data: chartData,\n                borderWidth: 1,\n                borderColor: 'rgb(0, 0, 0)',\n                backgroundColor: [CHART_COLORS.red, CHART_COLORS.orange, CHART_COLORS.yellow, CHART_COLORS.green, CHART_COLORS.blue, CHART_COLORS.purple, CHART_COLORS.grey]\n            }\n        ]\n    }\n}\n","import {getData} from \"./integration/Integration\";\nimport {useState, useEffect} from \"react\";\nimport {Chart} from \"./components/Chart\";\n\nlet loaded = false;\n\nfunction App() {\n    const [payload, setPayload] = useState({});\n\n    useEffect(async () => {\n        if(!loaded) {\n            setPayload((await getData()).data);\n            loaded = true;\n        }\n    });\n\n    return (\n        <>\n            <div>\n                <Chart payload={payload} />\n            </div>\n        </>\n    )\n}\n\nexport default App\n","import ReactDOM from \"react-dom\"\nimport React from \"react\"\nimport App from '../App'\n\nclass LineChart extends HTMLElement {\n    connectedCallback() {\n        this.mountPoint = document.createElement('span')\n        this.render()\n    }\n\n    render() {\n        ReactDOM.render(<React.StrictMode>\n                    <App/>\n            </React.StrictMode>,\n            this.appendChild(this.mountPoint))\n    }\n}\n\ncustomElements.get('line-chart') || customElements.define('line-chart', LineChart)\n"],"sourceRoot":""}